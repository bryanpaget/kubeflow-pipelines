// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewExperiment enables the 'Next' button when an experiment name is entered 1`] = `
<div
  className="page"
>
  <div
    className="scrollContainer"
  >
    <div
      className="header"
    >
      experimentDetails
    </div>
    <div
      className="explanation"
    >
      experimentDefinition
    </div>
    <Input
      autoFocus={true}
      id="experimentName"
      inputRef={
        Object {
          "current": null,
        }
      }
      label="experimentName"
      onChange={[Function]}
      required={true}
      value="experiment name"
      variant="outlined"
    />
    <Input
      id="experimentDescription"
      label="common:descriptionOptional"
      multiline={true}
      onChange={[Function]}
      value=""
      variant="outlined"
    />
    <div
      className="flex"
    >
      <BusyButton
        busy={false}
        className="buttonAction"
        disabled={false}
        id="createExperimentBtn"
        onClick={[Function]}
        title="common:next"
      />
      <WithStyles(Button)
        id="cancelNewExperimentBtn"
        onClick={[Function]}
      >
        common:cancel
      </WithStyles(Button)>
      <div
        className="errorMessage"
      />
    </div>
  </div>
</div>
`;

exports[`NewExperiment re-disables the 'Next' button when an experiment name is cleared after having been entered 1`] = `
<div
  className="page"
>
  <div
    className="scrollContainer"
  >
    <div
      className="header"
    >
      experimentDetails
    </div>
    <div
      className="explanation"
    >
      experimentDefinition
    </div>
    <Input
      autoFocus={true}
      id="experimentName"
      inputRef={
        Object {
          "current": null,
        }
      }
      label="experimentName"
      onChange={[Function]}
      required={true}
      value=""
      variant="outlined"
    />
    <Input
      id="experimentDescription"
      label="common:descriptionOptional"
      multiline={true}
      onChange={[Function]}
      value=""
      variant="outlined"
    />
    <div
      className="flex"
    >
      <BusyButton
        busy={false}
        className="buttonAction"
        disabled={true}
        id="createExperimentBtn"
        onClick={[Function]}
        title="common:next"
      />
      <WithStyles(Button)
        id="cancelNewExperimentBtn"
        onClick={[Function]}
      >
        common:cancel
      </WithStyles(Button)>
      <div
        className="errorMessage"
      >
        experimentNameRequired
      </div>
    </div>
  </div>
</div>
`;

exports[`NewExperiment renders the new experiment page 1`] = `
<div
  className="page"
>
  <div
    className="scrollContainer"
  >
    <div
      className="header"
    >
      experimentDetails
    </div>
    <div
      className="explanation"
    >
      experimentDefinition
    </div>
    <Input
      autoFocus={true}
      id="experimentName"
      inputRef={
        Object {
          "current": null,
        }
      }
      label="experimentName"
      onChange={[Function]}
      required={true}
      value=""
      variant="outlined"
    />
    <Input
      id="experimentDescription"
      label="common:descriptionOptional"
      multiline={true}
      onChange={[Function]}
      value=""
      variant="outlined"
    />
    <div
      className="flex"
    >
      <BusyButton
        busy={false}
        className="buttonAction"
        disabled={true}
        id="createExperimentBtn"
        onClick={[Function]}
        title="common:next"
      />
      <WithStyles(Button)
        id="cancelNewExperimentBtn"
        onClick={[Function]}
      >
        common:cancel
      </WithStyles(Button)>
      <div
        className="errorMessage"
      >
        experimentNameRequired
      </div>
    </div>
  </div>
</div>
`;
