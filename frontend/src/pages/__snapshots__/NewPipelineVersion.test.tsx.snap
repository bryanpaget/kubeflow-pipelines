// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewPipelineVersion creating new pipeline renders the new pipeline page 1`] = `
<div
  className="page"
>
  <div
    className="scrollContainer"
  >
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        checked={true}
        control={
          <WithStyles(Radio)
            color="primary"
          />
        }
        id="createNewPipelineBtn"
        label="createPipeline"
        onChange={[Function]}
      />
      <WithStyles(WithFormControlContext(FormControlLabel))
        checked={false}
        control={
          <WithStyles(Radio)
            color="primary"
          />
        }
        id="createPipelineVersionUnderExistingPipelineBtn"
        label="createPipelineVersion"
        onChange={[Function]}
      />
    </div>
    <div
      className="explanation"
    >
      common:uploadPipeline
    </div>
    <Input
      autoFocus={true}
      id="newPipelineName"
      inputRef={
        Object {
          "current": null,
        }
      }
      label="pipelineNameCaps"
      onChange={[Function]}
      required={true}
      value=""
      variant="outlined"
    />
    <Input
      autoFocus={true}
      id="pipelineDescription"
      inputRef={
        Object {
          "current": null,
        }
      }
      label="pipelineDescription"
      onChange={[Function]}
      required={true}
      value=""
      variant="outlined"
    />
    <div
      className=""
    >
      urlPublic
    </div>
    <div
      className=""
    >
      expectedFileFormat
       
      <ExternalLink
        href="https://www.kubeflow.org/docs/pipelines/sdk/build-component/#compile-the-pipeline"
      >
        compilePipelineDoc
      </ExternalLink>
      .
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        checked={false}
        control={
          <WithStyles(Radio)
            color="primary"
          />
        }
        id="localPackageBtn"
        label="common:uploadFile"
        onChange={[Function]}
      />
      <n
        disableClick={true}
        disablePreview={false}
        disabled={true}
        getDataTransferItems={[Function]}
        id="dropZone"
        inputProps={
          Object {
            "tabIndex": -1,
          }
        }
        maxSize={Infinity}
        minSize={0}
        multiple={true}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDrop={[Function]}
        preventDropOnDocument={true}
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <Input
          InputProps={
            Object {
              "endAdornment": <WithStyles(InputAdornment)
                position="end"
              >
                <WithStyles(Button)
                  color="secondary"
                  disabled={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "margin": 0,
                      "padding": "3px 5px",
                      "whiteSpace": "nowrap",
                    }
                  }
                >
                  common:chooseFile
                </WithStyles(Button)>
              </WithStyles(InputAdornment)>,
              "readOnly": true,
              "style": Object {
                "maxWidth": 2000,
                "width": 455,
              },
            }
          }
          disabled={true}
          label="common:file"
          onChange={[Function]}
          required={true}
          value=""
          variant="outlined"
        />
      </n>
    </div>
    <div
      className="flex"
    >
      <WithStyles(WithFormControlContext(FormControlLabel))
        checked={true}
        control={
          <WithStyles(Radio)
            color="primary"
          />
        }
        id="remotePackageBtn"
        label="importByUrl"
        onChange={[Function]}
      />
      <Input
        disabled={false}
        id="pipelinePackageUrl"
        label="packageUrl"
        multiline={true}
        onChange={[Function]}
        style={
          Object {
            "maxWidth": 2000,
            "width": 465,
          }
        }
        value=""
        variant="outlined"
      />
    </div>
    <Input
      id="pipelineVersionCodeSource"
      label="codeSource"
      multiline={true}
      onChange={[Function]}
      value=""
      variant="outlined"
    />
    <div
      className="flex"
    >
      <BusyButton
        busy={false}
        className="buttonAction"
        disabled={true}
        id="createNewPipelineOrVersionBtn"
        onClick={[Function]}
        title="common:create"
      />
      <WithStyles(Button)
        id="cancelNewPipelineOrVersionBtn"
        onClick={[Function]}
      >
        common:cancel
      </WithStyles(Button)>
      <div
        className="errorMessage"
      >
        mustSpecifyUrlFileError
      </div>
    </div>
  </div>
</div>
`;
