{
  "RestoreExperimentText": "original location? All runs and jobs in",
  "RestoreExperimentTextsuite": "will stay at their current locations in spite that",
  "WillbeMovedTo": "will be moved to",
  "aRecurringRun": "a recurring run",
  "aRun": "a run",
  "active": "active",
  "addVisInstruc1": "Add visualizations to your own components following instructions in",
  "addVisInstruc2": "Visualize Results in the Pipelines UI",
  "aggregatedView": "Aggregated view",
  "allExperiments": "All experiments",
  "allRuns": "All runs",
  "cannotStartRun": "Cannot start run without pipeline version",
  "catchup": "Catchup",
  "catchupHelpText1": "Whether the recurring run should catch up if behind schedule. Defaults to true.",
  "catchupHelpText2": "For example, if the recurring run is paused for a while and re-enabled afterwards. If catchup=true, the scheduler will catch up on (backfill) each missed interval. Otherwise, it only schedules the latest interval if more than one interval is ready to be scheduled.",
  "catchupHelpText3": "Usually, if your pipeline handles backfill internally, you should turn catchup off to avoid duplicate backfill.",
  "chooseExperiment": "Choose an experiment",
  "choosePipelineVersion": "Choose a pipeline version",
  "chooseTriggerMethod": "Choose a method by which new runs will be triggered",
  "clonedRunDetails": "Could not get cloned run details",
  "clonedRunPipelineDef": "Could not find the cloned run's pipeline definition.",
  "closeJsonEditor": "Close Json Editor",
  "compareRuns": "Compare runs",
  "cronExpression": "cron expression",
  "description": "Description ",
  "editingCronExpression": "Allow editing cron expression. ( format is specified",
  "endDateBeforeStartDate": "End date/time cannot be earlier than start date/time",
  "errorChangeStateRecurRun": "Error changing enabled state of recurring run",
  "errorEnableCustomVis": "Error: Unable to enable custom visualizations.",
  "errorErrorsFoundRun": "Error: found errors when executing run",
  "errorFindPipeline": "Error: failed to find a pipeline corresponding to that of the original run:",
  "errorFindPipelineVersion": "Error: failed to find a pipeline version corresponding to that of the original run:",
  "errorLoadRuns1": "Error: failed loading",
  "errorLoadRuns2": " runs.",
  "errorParsePipeline": "Error: failed to parse the embedded pipeline's spec",
  "errorPodLogs": "Failed to retrieve pod logs.",
  "errorPodLogsReasons": "Possible reasons include pod garbage collection, cluster autoscaling and pod preemption.",
  "errorReadPipelineDef": "Error: failed to read the clone run's pipeline definition.",
  "errorRetrieveAssocExperiment": "Error: failed to retrieve associated experiment",
  "errorRetrieveExperiment": "Error: failed to retrieve experiment",
  "errorRetrieveExperimentRecurrRun": "Error: failed to retrieve this recurring run's experiment.",
  "errorRetrieveOrigRecurrRun": "Error: failed to retrieve original recurring run",
  "errorRetrieveOrigRun": "Error: failed to retrieve original run",
  "errorRetrievePipeline": "Error: failed to retrieve pipeline",
  "errorRetrievePipelineVersion": "Error: failed to retrieve pipeline version",
  "errorRetrieveRecurrRun": "Error: failed to retrieve recurring run",
  "errorRetrieveRecurrRunConfig": "Error retrieving recurring run configs",
  "errorRetrieveRecurrRunsExperiment": "Error: failed to retrieve recurring runs for experiment",
  "errorRetrieveRun": "Error: failed to retrieve run",
  "errorRetrieveSpecRun": "Error: failed to retrieve the specified run",
  "errorRun": "Error: run",
  "errorRunProvided": "Error: somehow the run provided in the query params",
  "events": "Events",
  "experimentCreationFailed": "Experiment creation failed",
  "experimentDefinition": "Think of an Experiment as a space that contains the history of all pipelines and their associated runs",
  "experimentDescription": "Experiment description",
  "experimentDetails": "Experiment details",
  "experimentListError": "Error: failed to retrieve list of experiments.",
  "experimentName": "Experiment name",
  "experimentNameRequired": "Experiment name is required",
  "experimentTextArchive": "details. All runs in this archived experiment will be archived. All jobs in this archived experiment will be disabled. Use the Restore action on the experiment details page to restore the experiment",
  "experiment": "Experiment",
  "experiment_plural": "Experiments",
  "extraPermissionsRequired": "and extra permissions the specific task requires.",
  "filterExperiments": "Filter experiments",
  "filterPipelineVersions": "Filter pipeline versions",
  "filterRecurRuns": "Filter recurring runs",
  "filterRuns": "Filter runs",
  "genVisFailedComponent": "Unable to generate visualization, no component selected.",
  "genVisFailedError": "Unable to generate visualization, an unexpected error was encountered.",
  "genVisFailedJSON": "Unable to generate visualization, invalid JSON provided.",
  "hasEndDate": "Has end date",
  "hasStartDate": "Has start date",
  "inputArtifacts": "Input artifacts",
  "inputOutput": "Input/Output",
  "inputParameters": "Input parameters",
  "its": "its",
  "last5Runs": "Last 5 runs",
  "last5RunsFailed": "Failed to load the last 5 runs of this experiment",
  "listRecurRunConfigFailed": "List recurring run configs request failed with",
  "logs": "Logs",
  "logsCanBeViewed": "Logs can also be viewed in",
  "manifest": "Manifest",
  "maxConcurrentRuns": "Maximum concurrent runs",
  "maxConcurrentRunsAbbr": "Max. concurrent runs",
  "maxConcurrentRunsPositive": "For triggered runs, maximum concurrent runs must be a positive number",
  "metrics": "Metrics",
  "minPermissionsArgoWorkflow": "minimum permissions required by argo workflows",
  "minutes": "Minutes ",
  "mlMetadata": "ML Metadata",
  "mlMetadataNotFound": "Corresponding ML Metadata not found.",
  "moveExperiment": "will be moved to the Archive section, where you can still view",
  "moveExperiment_plural": "will be moved to the Archive section, where you can still view",
  "newExperiment": "New experiment",
  "newExperimentSuccess": "Successfully created new Experiment",
  "noEmbeddedPipeline": "had no embedded pipeline",
  "noExperimentsFound": "No experiments found. Click \"Create experiment\" to start.",
  "noExperimentsFoundTryAgain": "No experiments found. Create an experiment and then try again.",
  "noGraph": "No graph to show",
  "noMetricsFound": "No metrics found for this run.",
  "noOutputArtifactsFound": "No output artifacts found for this run.",
  "noParams": "This pipeline has no parameters",
  "noPipelineVersionsFoundTryAgain": "No pipeline versions found. Select or upload a pipeline then try again.",
  "noRecurRunsFound": "No recurring runs found in this experiment.",
  "noVisStep": "There are no visualizations in this step.",
  "noWorkflowManifest": "had no workflow manifest",
  "noteAccountNeeds": "Note, the service account needs",
  "noteStartEndDateCron": "Note: Start and end dates/times are handled outside of cron.",
  "oneOff": "One-off",
  "openJsonEditor": "Open Json Editor",
  "originalLocation": "original location.",
  "outputArtifacts": "Output artifacts",
  "outputParameters": "Output parameters",
  "parameters": "Parameters",
  "parametersAppearSelectPipeline": "Parameters will appear after you select a pipeline",
  "parametersMissingValues": "Some parameters are missing values",
  "parseTriggerFailed": "Failed to parse original trigger",
  "periodicIntervalEnum": {
    "minute": "Minute",
    "hour": "Hour",
    "day": "Day",
    "week": "Week",
    "month": "Month"
  },
  "pipelineVersionSelected": "A pipeline version must be selected",
  "pod": "Pod",
  "recurring": "Recurring",
  "recurringRunCatchUp": "Whether the recurring run should catch up if behind schedule. Defaults to true.",
  "recurringRunConfigs": "Recurring run configs",
  "recurringRunDetails": "Recurring run details",
  "recurringRunName": "Recurring run config name",
  "recurringRuns": "Recurring runs",
  "resourceManifest": "Resource Manifest",
  "runAssociatedWithExperiment": "This run will be associated with the following experiment",
  "runCreationFailed": "Run creation failed",
  "runDetails": "Run details",
  "runEvery": "Run every",
  "runName": "Run name",
  "runNameRequired": "Run name is required",
  "runOutput": "Run output",
  "runOverview": "Run overview",
  "runParams": "Run parameters",
  "runStatusError": "Error: failed to retrieve run statuses for experiment",
  "runTerminated": "This run was terminated",
  "runTrigger": "Run trigger",
  "runType": "Run Type",
  "runUsesKubernetesAccount": "This run will use the following Kubernetes service account.",
  "runWorkflowMessage": "This run's workflow included the following message",
  "runs": "Runs",
  "run": "Run",
  "run_plural": "Runs",
  "runtimeExecGraph": "Runtime execution graph. Only steps that are currently running or have already completed are shown.",
  "seriesNum": "Series #",
  "serviceAccountOptional": "Service Account (Optional)",
  "skipStep": "Skip this step",
  "specifyParams": "Specify parameters required by the pipeline",
  "stackdriverKubernetesMonitoring": "Stackdriver Kubernetes Monitoring",
  "stackdriverKubernetesMonitoringView": "Use Stackdriver Kubernetes Monitoring to view them.",
  "startNewRun": "Start a new run",
  "startNewRunSuccess": "Successfully started new Run",
  "startRecurringRun": "Start a recurring run",
  "stepCorrespondsExec": "This step corresponds to execution",
  "stepStateMessage1": "This step is in",
  "stepStateMessage2": "state with this message",
  "its_plural": "their",
  "thisexperiment_plural": "these experiments",
  "thisExperimentToIts": "this experiment to its",
  "thisExperimentToIts_plural": "this experiment to their",
  "thisexperiment": "this experiment",
  "threshold": "threshold",
  "to": "to",
  "trigger": "Trigger",
  "triggerType": "Trigger type",
  "triggerTypeEnum": {
    "periodic": "Periodic",
    "cron": "Cron"
  },
  "useExperiment": "Use this experiment",
  "usePipelineClonedRun": "Using pipeline from cloned run",
  "usePipelinePrevPage": "Using pipeline from previous page",
  "usePipelineVersion": "Use this pipeline version",
  "viewPipeline": "View pipeline",
  "visualizations": "Visualizations",
  "volumeMounts": "Volume Mounts",
  "volumes": "Volumes"
}
